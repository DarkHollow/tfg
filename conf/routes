# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                       controllers.Assets.versioned(path="/public", file: Asset)

# API documentation with Swagger --
GET     /api/docs                           controllers.Default.redirect(to = "docs/")
GET     /api/docs/                          controllers.Assets.at(path="/public/docs", file = "index.html")
GET     /api/docs/*file                     controllers.Assets.at(path="/public/docs", file)

# API root ------------------------
GET     /api                                controllers.Default.redirect(to = "api/")
GET     /api/                               controllers.RootController.index

# TV Shows ------------------------
GET     /api/tvshows                        controllers.TvShowController.all(search: String ?= "", tvdb: Integer ?= 0)
POST    /api/tvshows                        controllers.TvShowController.create

# --- URI pattern order ---
# TV Show Popular and top rated
GET     /api/tvshows/popular                controllers.PopularController.getPopular(size: Integer ?= -1)
GET     /api/tvshows/toprated               controllers.TvShowController.getTopRated(size: Integer ?= -1)
GET     /api/tvshows/toptwitter             controllers.TvShowController.getTopTwitter
# TV Show Following
GET     /api/tvshows/following              controllers.TvShowController.following()
# --- URI pattern order ---

GET     /api/tvshows/:id                    controllers.TvShowController.tvShowById(id: Integer)
PUT     /api/tvshows/:id                    controllers.TvShowController.updateData(id: Integer)
DELETE  /api/tvshows/:id                    controllers.TvShowController.delete(id: Integer)

# TV Show Seasons -----------------
GET     /api/tvshows/:id/seasons            controllers.SeasonController.allTvShowSeasons(id: Integer)
GET     /api/tvshows/:id/seasons/:number    controllers.SeasonController.seasonByTvShowIdAndSeasonNumber(id: Integer, number: Integer)

# TV Show Episodes ----------------
GET     /api/tvshows/:id/seasons/:sNumber/episodes              controllers.EpisodeController.allTvShowSeasonEpisodes(id: Integer, sNumber: Integer)
GET     /api/tvshows/:id/seasons/:sNumber/episodes/:eNumber     controllers.EpisodeController.seasonByTvShowIdAndSeasonNumber(id: Integer, sNumber: Integer, eNumber: Integer)

# TV Show Episodes seen/unseen
GET     /api/tvshows/:id/seasons/:sNumber/episodes/:eNumber/seen     controllers.EpisodeSeenController.getEpisodeSeen(id: Integer, sNumber: Integer, eNumber: Integer)
PUT     /api/tvshows/:id/seasons/:sNumber/episodes/:eNumber/seen     controllers.EpisodeSeenController.setEpisodeSeen(id: Integer, sNumber: Integer, eNumber: Integer)
DELETE  /api/tvshows/:id/seasons/:sNumber/episodes/:eNumber/seen     controllers.EpisodeSeenController.setEpisodeUnseen(id: Integer, sNumber: Integer, eNumber: Integer)

PUT     /api/tvshows/:id/seasons/:sNumber/seen                       controllers.EpisodeSeenController.setSeasonSeen(id: Integer, sNumber: Integer)
DELETE  /api/tvshows/:id/seasons/:sNumber/seen                       controllers.EpisodeSeenController.setSeasonUnseen(id: Integer, sNumber: Integer)

# TV Show Votes -------------------
GET     /api/tvshows/:tvShowId/rating       controllers.TvShowVoteController.getTvShowVote(tvShowId: Integer)
PUT     /api/tvshows/:tvShowId/rating       controllers.TvShowVoteController.voteTvShow(tvShowId: Integer)
DELETE  /api/tvshows/:tvShowId/rating       controllers.TvShowVoteController.deleteTvShowVote(tvShowId: Integer)

# TV Show Follow ------------------
GET     /api/tvshows/:tvShowId/following    controllers.TvShowController.followCheck(tvShowId: Integer)
PUT     /api/tvshows/:tvShowId/following    controllers.TvShowController.follow(tvShowId: Integer)
DELETE  /api/tvshows/:tvShowId/following    controllers.TvShowController.unfollow(tvShowId: Integer)

# The TVDB API --------------------
GET     /api/tvshows/tvdb/:tvdbId           controllers.TvdbController.tvShowById(tvdbId: Integer)

# TV Show requests ----------------
POST    /api/requests                       controllers.TvShowRequestController.create
PATCH   /api/requests/:id                   controllers.TvShowRequestController.update(id: Integer)
PUT     /api/requests/:id/newtvshow         controllers.TvShowRequestController.newTvShow(id: Integer)

# Users ---------------------------
POST    /api/users                          controllers.UserController.register
POST    /api/users/session                  controllers.UserController.login
GET     /api/users/session                  controllers.UserController.verifySession

# Evolutions
GET     /api/evolutions                     controllers.EvolutionController.getEvolutions(status: String ?= "")
PATCH   /api/evolutions                     controllers.EvolutionController.applyEvolutionJSON

# Admin client
GET     /                                   controllers.Default.redirect(to = "admin")
GET     /admin/login                        controllers.AdminController.loginView
GET     /admin                              controllers.AdminController.index
GET     /admin/tvShows                      controllers.AdminController.tvShows
GET     /admin/tvShows/:id                  controllers.AdminController.tvShow(id: Integer)
GET     /admin/trending                     controllers.AdminController.trending
GET     /admin/tvShowRequests               controllers.AdminController.tvShowRequests
