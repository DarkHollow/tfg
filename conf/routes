# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing how to use dependency injection
GET     /count                      controllers.CountController.count
# An example controller showing how to write asynchronous code
GET     /message                    controllers.AsyncController.message

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)

# API documentation with Swagger --
GET     /api/doc                    controllers.Default.redirect(to = "doc/")
GET     /api/doc/                   controllers.Assets.at(path="/public/doc", file = "index.html")
GET     /api/doc/*file              controllers.Assets.at(path="/public/doc", file)


# API root ------------------------
GET     /api                        controllers.Default.redirect(to = "api/")
GET     /api/                       controllers.RootController.index


# TV Shows ------------------------

## all TV Shows (future pagination?)
GET     /api/tvshows/               controllers.TvShowController.all
GET     /api/tvshows                controllers.TvShowController.all

GET     /api/tvshows/:id/            controllers.TvShowController.tvShowById(id: Integer)
GET     /api/tvshows/:id             controllers.TvShowController.tvShowById(id: Integer)

POST    /api/tvshows/               controllers.TvShowController.create
POST    /api/tvshows                controllers.TvShowController.create

DELETE  /api/tvshows/:id/           controllers.TvShowController.deleteTvShow(id: Integer)
DELETE  /api/tvshows/:id            controllers.TvShowController.deleteTvShow(id: Integer)


# TV Show request ----------------

## TV Show request
POST    /api/requests/      controllers.TvShowRequestController.create
POST    /api/requests       controllers.TvShowRequestController.create

### TV Show request acceptance
PUT     /api/requests/:id/    controllers.TvShowRequestController.acceptTvShowRequest(id: Integer)
PUT     /api/requests/:id     controllers.TvShowRequestController.acceptTvShowRequest(id: Integer)

### TV Show request rejection
PATCH     /api/requests/:id/    controllers.TvShowRequestController.rejectTvShowRequest(id: Integer)
PATCH     /api/requests/:id     controllers.TvShowRequestController.rejectTvShowRequest(id: Integer)

# TV Show Vote ----------------

### TV Show Vote by tvShowId for autenticated user
GET     /api/tvshows/:tvShowId/rating/    controllers.TvShowVoteController.getByTvShowUser(tvShowId: Integer)
GET     /api/tvshows/:tvShowId/rating     controllers.TvShowVoteController.getByTvShowUser(tvShowId: Integer)

PUT     /api/tvshows/:tvShowId/rating/    controllers.TvShowVoteController.createTvShowUser(tvShowId: Integer)
PUT     /api/tvshows/:tvShowId/rating     controllers.TvShowVoteController.createTvShowUser(tvShowId: Integer)

DELETE  /api/tvshows/:tvShowId/rating/    controllers.TvShowVoteController.deleteTvShowUser(tvShowId: Integer)
DELETE  /api/tvshows/:tvShowId/rating     controllers.TvShowVoteController.deleteTvShowUser(tvShowId: Integer)

## TVDB

## TV Show on TVDB by tvdbId
GET     /api/tvshows/tvdb/:tvdbId/  controllers.TvdbController.tvShowById(tvdbId: Integer)
GET     /api/tvshows/tvdb/:tvdbId   controllers.TvdbController.tvShowById(tvdbId: Integer)

## TV Shows search on TVDB by name
GET     /api/search/TVDB/:q/        controllers.TvShowRequestController.searchTvShowTVDBbyName(q: String)
GET     /api/search/TVDB/:q         controllers.TvShowRequestController.searchTvShowTVDBbyName(q: String)

# API Search ---------------------

# TV Shows search by LIKE
GET     /api/search/tvshows/:q/     controllers.TvShowController.searchTvShowNameLike(q: String)
GET     /api/search/tvshows/:q      controllers.TvShowController.searchTvShowNameLike(q: String)


# Users

POST    /api/user/                  controllers.UserController.register()
POST    /api/user                   controllers.UserController.register()

POST    /api/user/session/          controllers.UserController.login()
POST    /api/user/session           controllers.UserController.login()

GET     /api/user/session/          controllers.UserController.verifySession()
GET     /api/user/session           controllers.UserController.verifySession()


# Admin

## Homepage redirects to admin
GET     /                           controllers.Default.redirect(to = "admin/")

GET     /admin/login/               controllers.AdminController.loginView()
GET     /admin/login                controllers.AdminController.loginView()

GET     /admin/                     controllers.AdminController.index()
GET     /admin                      controllers.AdminController.index()

GET     /admin/tvShows/             controllers.AdminController.tvShows()
GET     /admin/tvShows              controllers.AdminController.tvShows()

GET     /admin/tvShows/:id/         controllers.AdminController.tvShow(id: Integer)
GET     /admin/tvShows/:id          controllers.AdminController.tvShow(id: Integer)

PUT     /admin/tvshows/:id/         controllers.TvShowController.updateTvShowData(id: Integer)
PUT     /admin/tvshows/:id          controllers.TvShowController.updateTvShowData(id: Integer)

GET     /admin/tvShowRequests/      controllers.AdminController.tvShowRequests()
GET     /admin/tvShowRequests       controllers.AdminController.tvShowRequests()

GET     /admin/evolutions/          controllers.EvolutionController.getEvolutionsJSON
GET     /admin/evolutions           controllers.EvolutionController.getEvolutionsJSON

GET     /admin/evolutions/notApplied/   controllers.EvolutionController.getNotAppliedJSON
GET     /admin/evolutions/notApplied    controllers.EvolutionController.getNotAppliedJSON

PATCH   /admin/evolutions/          controllers.EvolutionController.applyEvolutionJSON
PATCH   /admin/evolutions           controllers.EvolutionController.applyEvolutionJSON
