# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                           controllers.HomeController.index
# An example controller showing how to use dependency injection
GET     /count                      controllers.CountController.count
# An example controller showing how to write asynchronous code
GET     /message                    controllers.AsyncController.message

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)

# API documentation with Swagger
GET     /api/doc                    controllers.Default.redirect(to = "doc/")
GET     /api/doc/                   controllers.Assets.at(path="/public/doc", file = "index.html")
GET     /api/doc/*file              controllers.Assets.at(path="/public/doc", file)


# API root
GET     /api                        controllers.Default.redirect(to = "api/")
GET     /api/                       controllers.RootController.index


# API Series

# all series (future pagination?)
GET     /api/series/                controllers.Default.redirect(to = "../series")
GET     /api/series                 controllers.SerieController.all

# series by id
GET     /api/series/:id/            controllers.SerieController.serieById(id: Integer)
GET     /api/series/:id             controllers.SerieController.serieById(id: Integer)

# API Search

# series search by LIKE
GET     /api/search/series/:q/      controllers.SerieController.searchSeriesNameLike(q: String)
GET     /api/search/series/:q       controllers.SerieController.searchSeriesNameLike(q: String)

# series search on TVDB by name
GET     /api/search/TVDB/:q/        controllers.TvdbController.searchSeriesTVDBbyName(q: String)
GET     /api/search/TVDB/:q         controllers.TvdbController.searchSeriesTVDBbyName(q: String)

# API TV Show Request
POST    /api/series/request         controllers.SerieController.requestSeries
