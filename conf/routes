# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                   controllers.Assets.versioned(path="/public", file: Asset)

# API documentation with Swagger --
GET     /api/doc                        controllers.Default.redirect(to = "doc/")
GET     /api/doc/                       controllers.Assets.at(path="/public/doc", file = "index.html")
GET     /api/doc/*file                  controllers.Assets.at(path="/public/doc", file)

# API root ------------------------
GET     /api                            controllers.Default.redirect(to = "api/")
GET     /api/                           controllers.RootController.index

# TV Shows ------------------------
GET     /api/tvshows                    controllers.TvShowController.all(search: String ?= "", tvdb: Integer ?= 0)
POST    /api/tvshows                    controllers.TvShowController.create
GET     /api/tvshows/:id                controllers.TvShowController.tvShowById(id: Integer)
PUT     /api/tvshows/:id                controllers.TvShowController.updateData(id: Integer)
DELETE  /api/tvshows/:id                controllers.TvShowController.delete(id: Integer)

# TV Show requests ----------------
POST    /api/requests                   controllers.TvShowRequestController.create
PATCH   /api/requests/:id               controllers.TvShowRequestController.update(id: Integer)
PUT     /api/requests/:id/newtvshow     controllers.TvShowRequestController.newTvShow(id: Integer)

# TV Show Votes -------------------
GET     /api/tvshows/:tvShowId/rating   controllers.TvShowVoteController.getByTvShowUser(tvShowId: Integer)
PUT     /api/tvshows/:tvShowId/rating   controllers.TvShowVoteController.createTvShowUser(tvShowId: Integer)
DELETE  /api/tvshows/:tvShowId/rating   controllers.TvShowVoteController.deleteTvShowUser(tvShowId: Integer)

# The TVDB API --------------------
GET     /api/tvshows/tvdb/:tvdbId       controllers.TvdbController.tvShowById(tvdbId: Integer)

# Users ---------------------------
POST    /api/user                       controllers.UserController.register()
POST    /api/user/session               controllers.UserController.login()
GET     /api/user/session               controllers.UserController.verifySession()

# Evolutions
GET     /api/evolutions                 controllers.EvolutionController.getEvolutions(status: String ?= "")
PATCH   /api/evolutions                 controllers.EvolutionController.applyEvolutionJSON

# Admin client
GET     /                               controllers.Default.redirect(to = "admin/")
GET     /admin/login                    controllers.AdminController.loginView()
GET     /admin                          controllers.AdminController.index()
GET     /admin/tvShows                  controllers.AdminController.tvShows()
GET     /admin/tvShows/:id              controllers.AdminController.tvShow(id: Integer)
GET     /admin/tvShowRequests           controllers.AdminController.tvShowRequests()
