# Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping.
# Code completion support is available so start typing for available options.
swagger: '2.0'

# This is your document metadata
info:
  version: "0.1.4"
  title: TFG Trending Series v0 `Offline`
  description: >-
    The API is accessible via https://darkhollow.github.com/tfg-tvShows-playAPI/
    and provides the following `REST` endpoints in `JSON` format.



    How to use this API documentation

    ----------------



    You may browse the API routes freely without any authentication.


    You will **NOT** be able to use the routes to send requests to the API and
    get a response because this is a `Offline Documentation` for `Github Pages`.

    Because of that, the button `Try it out` is disabled in all the routes.



    Versioning

    ----------------



    This documentation automatically uses the version seen at the top and
    bottom of the page.



    About this project

    ----------------



    This [API](https://github.com/DarkHollow/tfg-tvShows-playAPI) and API documentation is part of a `TFG (Final Degree Project)`
    of Software Engineering by [Roberto CÃ¡novas ![Github](images/github-logo.png)](https://github.com/DarkHollow/) at
    the University of Alicante (Spain). You can contact me at [Github](https://github.com/DarkHollow/), [e-mail](mailto: rcanovas.corp@gmail.com) or [Twitter](https://twitter.com/RobCanovas).

    ### Status: work in progress


basePath: /api
tags:
  - name: root
    description: Status
  - name: Search
    description: Search for TV Shows
  - name: TV Show
    description: Information and request about a specific TV Show
  - name: User
    description: Information and routes for handling user data
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /:
    get:
      tags:
        - root
      description: >-
        Returns the status of the API and a link to the documentation
      responses:
        '200':
          description: JSON response with status and doc link keys
          schema:
            type: object
            properties:
              status:
                type: string
                description: status of the API
              API_doc:
                type: string
                description: link to the documentation
  /search/tvShows/{name}:
    get:
      tags:
        - Search
      description: >-
        Allows the user to search for tvShows based on its name (can be partially)
      parameters:
        - name: name
          in: path
          required: true
          description: Name of the tvShows to search for
          type: string
      responses:
        '200':
          description: JSON response with an array of all results that match partially or exact
          schema:
            $ref: '#/definitions/TvShowsArray'
        '400':
          description: JSON response with 400 Bad request error (less than 3 characters searched or empty query)
          schema:
            $ref: '#/definitions/BadRequest'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
  /search/TVDB/{name}:
    get:
      tags:
        - Search
      description: >-
        Allows the user to search for tvShows based on its name on TVDB and match them with tvShows in our bbdd
      parameters:
        - name: name
          in: path
          required: true
          description: Name of the tvShows to search for
          type: string
      responses:
        '200':
          description: JSON response with an array of all results that match partially or exact
          schema:
            $ref: '#/definitions/TvdbTvShowsArray'
        '400':
          description: JSON response with 400 Bad request error (less than 3 characters searched or empty query)
          schema:
            $ref: '#/definitions/BadRequest'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
  /tvshows:
    get:
      tags:
        - TV Show
      description: >-
        Returns basic information about all TV Shows (maybe will be deprecated?)
      responses:
        '200':
          description: JSON response with an array of all TV Shows
          schema:
            $ref: '#/definitions/TvShowsArray'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
  /tvshow/{id}:
    get:
      tags:
        - TV Show
      description: >-
        Returns all information about a particular TV Show by id
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the TV Show
          type: integer
      responses:
        '200':
          description: JSON response with the information of the TV Show
          schema:
            $ref: '#/definitions/TvShow'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
  /tvshow/request:
    post:
      tags:
        - TV Show
      description: >-
        Request a TV show that isn't in our database
      parameters:
        - name: TV Show request body
          in: body
          required: true
          description: JSON string containing the request parameters
          schema:
            $ref: '#/definitions/TvShowRequestBody'
      responses:
        '200':
          description: JSON response with the resolution of the request
          schema:
            $ref: '#/definitions/Ok'
        '400':
          description: JSON response with 404 Bad Request error
          schema:
            $ref: '#/definitions/BadRequest'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
  /user:
      post:
        tags:
          - User
        description: >-
          Register a new user
        parameters:
          - name: User register body
            in: body
            required: true
            description: JSON string containing the register parameters
            schema:
              $ref: '#/definitions/UserRegisterBody'
        responses:
          '200':
            description: JSON response with the resolution of the request
            schema:
              $ref: '#/definitions/Ok'
          '400':
            description: JSON response with 400 Bad Request error
            schema:
              $ref: '#/definitions/BadRequest'
definitions:
  Ok:
    properties:
      ok:
        type: string
  BadRequest:
    properties:
      error:
        type: string
  NotFound:
    properties:
      error:
        type: string
  InternalServerError:
    properties:
      error:
        type: string
  TvShowRequestBody:
    properties:
      tvdbId:
        type: integer
      userId:
        type: integer
  TvShowsArray:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
          description: TV Show id
        name:
          type: string
          description: name of the TV Show
        firstAired:
          type: string
          description: first aired date
        banner:
          type: string
          description: relative url of the banner image
  TvdbTvShowsArray:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
          description: TV Show id
        tvdbId:
          type: integer
          description: TVDB id
        name:
          type: string
          description: name of the TV Show
        firstAired:
          type: string
          description: first aired date
        banner:
          type: string
          description: relative url of the banner image
        local:
          type: boolean
          description: true if the tvShows is in our bbdd
        requested:
          type: boolean
          description: true if the tvShows is requested by users
  TvShow:
    type: object
    properties:
      id:
        type: integer
        description: TV Show id
      name:
        type: string
        description: name of the TV Show
      firstAired:
        type: string
        description: first aired date
      overview:
        type: string
        description: a summary of the TV Show
      banner:
        type: string
        description: relative url of the banner image
      poster:
        type: string
        description: relative url of the poster image
      fanart:
        type: string
        description: relative url of the fanart image
      network:
        type: string
        description: network where the TV Show airs
      runtime:
        type: integer
        description: average episode runtime
      genre:
        type: array
        items:
          type: string
        description: genres of the TV Show
      status:
        type: string
        description: status of the TV Show (continuing or ended)
      writer:
        type: string
        description: writer or writers of the tvShows
      actors:
        type: string
        description: principal actors of the TV Show
      imdbRating:
        type: number
        format: float
        description: average rating on imdb of the TV Show
      trailer:
        type: string
        description: YouTube video code of the trailer
  UserRegisterBody:
    properties:
      email:
        type: string
        description: new user's email
      password:
        type: string
        description: new user's hash email
      name:
        type: string
        description: new user's name
