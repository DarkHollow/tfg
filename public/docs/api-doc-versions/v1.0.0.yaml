# Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping.
# Code completion support is available so start typing for available options.
swagger: "2.0"

# This is your document metadata
info:
  version: "1.0.0"
  title: TFG Trending Series API v1.0.0
  description: >-
    The API provides the
    following `REST` endpoints in `JSON` format.



    How to use this API documentation

    ----------------



    You may browse the API routes without authentication, but if you wish to
    send requests to the API and see response data, then you must authenticate.


    Whether you have a user account or and administrator accout, you must:

    - Obtain a JWT by `POST`ing to the `/users/session` route at the `Users` section

    - Then, authorize the requests clicking on the **Authorize 🔓** button and enter the JWT with the following format


    ```
    Bearer yourJWT
    ```


    And then, you will be able to use all the routes to send requests to the API and get
    a response for thouse routes your account has access (user or administrator).


    As an information, the icon 👨🏻‍💻 will be displayed to indicate an admintration operation.


    _If you don't have an user account, create it at the `Users` section_



    Versioning

    ----------------



    This documentation automatically uses the version seen in the title tag
    at the top of the page.



    About this project

    ----------------



    This [API](https://github.com/DarkHollow/tfg-series-playAPI) and API documentation is part of a `TFG (Final Degree Project)`
    of Software Engineering by [Roberto Cánovas](https://github.com/DarkHollow/) at
    the University of Alicante (Spain).


    You can contact me at [Github](https://github.com/DarkHollow/), e-mail rcanovas.corp@gmail.com or [Twitter](https://twitter.com/RobCanovas).


    #### Status: work in progress


basePath: /api
tags:
  - name: root
    description: Status of the API
  - name: TV Shows
    description: Information and routes for handling TV Shows data
  - name: Seasons
    description: Information and routes for handling TV Show Seasons data
  - name: Episodes
    description: Information and routes for handling TV Show Seasons Episodes data
  - name: Rating, Popularity and Trending
    description: Information and routes for handling TV Show ratings, popularity and trending
  - name: Following
    description: Information and routes to follow, to unfollow or to check follow state of TV Shows
  - name: Seen
    description: Information and routes to set as seen or unseen episodes, seasons and TV Shows
  - name: Requests
    description: Information and routes for handling TV Show Requests data
  - name: Users
    description: Information and routes for handling Users data
  - name: Evolutions
    description: Information and routes for handling Evolutions
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /:
    get:
      tags:
        - root
      description: >-
        Returns the status of the API and a link to the documentation
      responses:
        '200':
          description: JSON response with status and doc link keys
          schema:
            type: object
            properties:
              status:
                type: string
                description: status of the API
              API_doc:
                type: string
                description: link to the documentation
  /tvshows:
    get:
      tags:
        - TV Shows
      description: >-
        Returns basic information about TV Shows and search
      security:
        - jwtAuth: []
      parameters:
        - name: search
          in: query
          required: false
          description: search by name (optional)
          type: string
        - name: tvdb
          in: query
          required: false
          description: set to 1 to search on TVDB (optional)
          type: integer
      responses:
        '200':
          description: JSON response with an array of TV Shows
          schema:
            $ref: '#/definitions/TvShowsArray'
        '401':
          description: JSON response with Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
    post:
      tags:
        - TV Shows
      summary: 👨🏻‍💻
      description: >-
        Creates a new TV Show **(admin only)**
      security:
        - jwtAuth: []
      parameters:
        - name: body
          in: body
          required: true
          description: JSON containing the TV Show to be created
          schema:
            $ref: '#/definitions/TvShowBody'
      responses:
        '201':
          description: JSON response with the resolution of the creation
          schema:
            $ref: '#/definitions/Ok'
        '400':
          description: JSON response with 400 Bad Request error
          schema:
            $ref: '#/definitions/BadRequest'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: JSON response with 500 Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'
  /tvshows/{id}:
    get:
      tags:
        - TV Shows
      description: >-
        Returns all information about a particular TV Show by id
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the TV Show
          type: integer
      responses:
        '200':
          description: JSON response with the information of the TV Show
          schema:
            $ref: '#/definitions/TvShow'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
    put:
      tags:
        - TV Shows
      summary: 👨🏻‍💻
      description: >-
        Updates the required data of a TV Show **(admin only)**
      security:
        - jwtAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the TV Show
          type: integer
        - in: body
          name: update
          description: part of the data to update (basic data, images)
          schema:
            $ref: '#/definitions/TvShowUpdateBody'
      responses:
        '200':
          description: JSON response with TV Show updated
          schema:
            $ref: '#/definitions/TvShow'
        '400':
          description: JSON response with 400 Bad Request error
          schema:
            $ref: '#/definitions/BadRequest'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '504':
          description: JSON response with 504 Gateway Timeout error
          schema:
            $ref: '#/definitions/GatewayTimeoutError'
    delete:
      tags:
        - TV Shows
      summary: 👨🏻‍💻
      description: >-
        Delete a TV Show **(admin only)**
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the TV Show
          type: integer
      responses:
        '200':
          description: JSON response with successful delete
          schema:
            $ref: '#/definitions/Ok'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
  /tvshows/tvdb/{tvdbId}:
    get:
      tags:
        - TV Shows
      summary: 👨🏻‍💻
      description: >-
        Returns all information about a particular TV Show on TVDB by tvdbId **(only admin)**
      security:
        - jwtAuth: []
      parameters:
        - name: tvdbId
          in: path
          required: true
          description: tvdbId of the TV Show
          type: integer
      responses:
        '200':
          description: JSON response with the information of the TV Show by TVDB
          schema:
            $ref: '#/definitions/TvShowTvdb'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
  /tvshows/{id}/seasons:
    get:
      tags:
        - Seasons
      description: >-
        Returns simple information about all TV Shows Seasons
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: id of the TV Show
          type: integer
      responses:
        '200':
          description: JSON response with an array of seasons information
          schema:
            $ref: '#/definitions/ArraySimpleSeason'
        '401':
          description: JSON response with Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
  /tvshows/{id}/seasons/{number}:
    get:
      tags:
        - Seasons
      description: >-
        Returns complete information about a TV Shows Season by number
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: id of the TV Show
          type: integer
        - name: snumber
          in: path
          required: true
          description: season number of the TV Show
          type: integer
      responses:
        '200':
          description: JSON response with all season information
          schema:
            $ref: '#/definitions/CompleteSeason'
        '401':
          description: JSON response with Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
  /tvshows/{id}/seasons/{snumber}/episodes:
    get:
      tags:
        - Episodes
      description: >-
        Returns information about all episodes from a season
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: id of the TV Show
          type: integer
        - name: snumber
          in: path
          required: true
          description: season number of the TV Show
          type: integer
      responses:
        '200':
          description: JSON response with an array of episodes information
          schema:
            $ref: '#/definitions/ArrayEpisodes'
        '401':
          description: JSON response with Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
  /tvshows/{id}/seasons/{snumber}/episodes/{enumber}:
    get:
      tags:
        - Episodes
      description: >-
        Returns information about a TV Shows Season Episode by number
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: id of the TV Show
          type: integer
        - name: snumber
          in: path
          required: true
          description: season number of the TV Show
          type: integer
        - name: enumber
          in: path
          required: true
          description: episode number of the TV Show Season
          type: integer
      responses:
        '200':
          description: JSON response with all episode information
          schema:
            $ref: '#/definitions/CompleteEpisode'
        '401':
          description: JSON response with Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
  /tvshows/{id}/rating:
    get:
      tags:
        - Rating, Popularity and Trending
      description: >-
        Returns the TV Show rating for the authenticated user
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: id of the TV Show
          type: integer
      responses:
        '200':
          description: JSON response with the TV Show rating for the authenticated user
          schema:
            $ref: '#/definitions/TvShowRating'
        '400':
          description: JSON response with 400 Bad Request error
          schema:
            $ref: '#/definitions/BadRequest'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
    put:
      tags:
        - Rating, Popularity and Trending
      description: >-
        Rate or modify the actual rating of a TV Show for the authenticated user
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: id of the TV Show
          type: integer
        - in: body
          name: score
          description: new rating
          schema:
            $ref: '#/definitions/RatingPutBody'
      responses:
        '200':
          description: JSON response of rating modified successfully
          schema:
            $ref: '#/definitions/TvShowRating'
        '201':
          description: JSON response of rating created successfully
          schema:
            $ref: '#/definitions/TvShowRating'
        '400':
          description: JSON response with 400 Bad Request error
          schema:
            $ref: '#/definitions/BadRequest'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
    delete:
      tags:
        - Rating, Popularity and Trending
      description: >-
        Delete a rating for the authenticated user
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the TV Show
          type: integer
      responses:
        '200':
          description: JSON response with successful delete
          schema:
            $ref: '#/definitions/Ok'
        '400':
          description: JSON response with 400 Bad Request error
          schema:
            $ref: '#/definitions/BadRequest'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
  /tvshows/following:
    get:
      tags:
        - Following
      description:
        Returns an array of TV Shows the authenticated user is following
      security:
        jwtAuth: []
      responses:
        '200':
          description: JSON response with an array of TV Shows user is following
          schema:
            $ref: '#/definitions/TopRatedArray'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
  /tvshows/{id}/following:
    get:
      tags:
        - Following
      description: >-
        Returns if the authenticated user is following the TV Show
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: id of the TV Show
          type: integer
      responses:
        '204':
          description: No content - authenticated user follows the TV Show
        '404':
          description: 404 Not Found - authenticated user doesn't follow the TV Show
          schema:
            $ref: '#/definitions/NotFound'
    put:
      tags:
        - Following
      description: >-
        Follows a TV Show for the authenticated user
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: id of the TV Show
          type: integer
      responses:
        '204':
          description: No content - TV Show followed successfully
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
    delete:
      tags:
        - Following
      description: >-
        Unfollows a TV Show for the authenticated user
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the TV Show
          type: integer
      responses:
        '204':
          description: No content - TV Show unfollowed successfully
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
  /tvshows/{id}/seen:
    put:
      tags:
        - Seen
      description: >-
        Set a complete TV Show as seen including all episodes of all seasons
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the TV Show
          type: integer
      responses:
        '200':
          description: JSON response with ok result
          schema:
            $ref: '#/definitions/Ok'
        '400':
          description: JSON response with 404 Bad Request error
          schema:
            $ref: '#/definitions/BadRequest'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
    delete:
      tags:
        - Seen
      description: >-
        Set a complete TV Show as NOT seen including all episodes of all seasons
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the TV Show
          type: integer
      responses:
        '200':
          description: JSON response with ok result
          schema:
            $ref: '#/definitions/Ok'
        '400':
          description: JSON response with 404 Bad Request error
          schema:
            $ref: '#/definitions/BadRequest'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
  /tvshows/{id}/seasons/{sn}/seen:
    put:
      tags:
        - Seen
      description: >-
        Set a complete Season as seen including all episodes
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the TV Show
          type: integer
        - name: sn
          in: path
          required: true
          description: season number
          type: integer
      responses:
        '200':
          description: JSON response with ok result
          schema:
            $ref: '#/definitions/Ok'
        '400':
          description: JSON response with 404 Bad Request error
          schema:
            $ref: '#/definitions/BadRequest'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
    delete:
      tags:
        - Seen
      description: >-
        Set a complete Season as NOT seen including all episodes
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the TV Show
          type: integer
        - name: sn
          in: path
          required: true
          description: season number
          type: integer
      responses:
        '200':
          description: JSON response with ok result
          schema:
            $ref: '#/definitions/Ok'
        '400':
          description: JSON response with 404 Bad Request error
          schema:
            $ref: '#/definitions/BadRequest'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
  /tvshows/{id}/seasons/{sn}/episodes/{en}/seen:
    get:
      tags:
        - Seen
      description: >-
        Gets if an Episode has been viewed
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the TV Show
          type: integer
        - name: sn
          in: path
          required: true
          description: season number
          type: integer
        - name: en
          in: path
          required: true
          description: episode number
          type: integer
      responses:
        '200':
          description: JSON response with ok result with date of seen
          schema:
            $ref: '#/definitions/EpisodeSeenOk'
        '400':
          description: JSON response with 404 Bad Request error
          schema:
            $ref: '#/definitions/BadRequest'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
    put:
      tags:
        - Seen
      description: >-
        Set an Episode as seen
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the TV Show
          type: integer
        - name: sn
          in: path
          required: true
          description: season number
          type: integer
        - name: en
          in: path
          required: true
          description: episode number
          type: integer
      responses:
        '200':
          description: JSON response with ok result
          schema:
            $ref: '#/definitions/EpisodeSeenOk'
        '400':
          description: JSON response with 404 Bad Request error
          schema:
            $ref: '#/definitions/BadRequest'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
    delete:
      tags:
        - Seen
      description: >-
        Set an Episode as NOT seen
      security:
        - jwtAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the TV Show
          type: integer
        - name: sn
          in: path
          required: true
          description: season number
          type: integer
        - name: en
          in: path
          required: true
          description: episode number
          type: integer
      responses:
        '200':
          description: JSON response with ok result
          schema:
            $ref: '#/definitions/Ok'
        '400':
          description: JSON response with 404 Bad Request error
          schema:
            $ref: '#/definitions/BadRequest'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
  /tvshows/popular:
    get:
      tags:
        - Rating, Popularity and Trending
      description: >-
        Get a list of popular TV shows
      security:
       - jwtAuth: []
      parameters:
        - name: size
          in: query
          required: false
          description: list size from 1 to 10
          type: integer
      responses:
        '200':
          description: JSON response with an array of popular TV shows
          schema:
            $ref: '#/definitions/PopularArray'
        '401':
          description: JSON response with Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
  /tvshows/toprated:
    get:
      tags:
        - Rating, Popularity and Trending
      description: >-
        Get a list of top rated TV Shows
      security:
       - jwtAuth: []
      parameters:
        - name: size
          in: query
          required: false
          description: list size from 1 to 10
          type: integer
      responses:
        '200':
          description: JSON response with an array of top rated TV shows
          schema:
            $ref: '#/definitions/TopRatedArray'
        '401':
          description: JSON response with Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
  /tvshows/toptwitter:
    get:
      tags:
        - Rating, Popularity and Trending
      description: >-
        Get a list of top 5 TV Shows trending ratio in Twitter
      security:
       - jwtAuth: []
      responses:
        '200':
          description: JSON response with an array of top twitter TV shows
          schema:
            $ref: '#/definitions/TopTwitterArray'
        '401':
          description: JSON response with Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
  /requests:
    post:
      tags:
        - Requests
      description: >-
        Request a new TV show
      security:
        - jwtAuth: []
      parameters:
        - name: TV Show request body
          in: body
          required: true
          description: JSON string containing the request parameters
          schema:
            $ref: '#/definitions/TvShowRequestBody'
      responses:
        '201':
          description: JSON response with the resolution of the request
          schema:
            $ref: '#/definitions/Ok'
        '400':
          description: JSON response with 404 Bad Request error
          schema:
            $ref: '#/definitions/BadRequest'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '504':
          description: JSON response with 504 Gateway Timeout error
          schema:
            $ref: '#/definitions/GatewayTimeoutError'
  /requests/{id}:
    patch:
      tags:
        - Requests
      summary: 👨🏻‍💻
      description: >-
        Updates the status of a request **(admin only)**
      security:
        - jwtAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the TV Show
          type: integer
        - in: body
          name: status
          description: new status
          schema:
            $ref: '#/definitions/RequestPatchBody'
      responses:
        '200':
          description: JSON response with TV Show updated info
          schema:
            $ref: '#/definitions/Ok'
        '400':
          description: JSON response with 400 Bad Request error
          schema:
            $ref: '#/definitions/BadRequest'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
  /requests/{id}/newtvshow:
    put:
      tags:
        - Requests
      summary: 👨🏻‍💻
      description: >-
        Updates the status of a request **(admin only)**
      security:
        - jwtAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the TV Show
          type: integer
        - in: body
          name: status
          description: new status
          schema:
            $ref: '#/definitions/RequestPatchBody'
      responses:
        '200':
          description: JSON response with TV Show created and more info
          schema:
            $ref: '#/definitions/TvShowCreated'
        '400':
          description: JSON response with 400 Bad Request error
          schema:
            $ref: '#/definitions/BadRequest'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
        '504':
          description: JSON response with 504 Gateway Timeout error
          schema:
            $ref: '#/definitions/GatewayTimeoutError'
  /users:
    post:
      tags:
        - Users
      description: >-
        Register a new user
      parameters:
        - name: User register body
          in: body
          required: true
          description: JSON string containing the register parameters
          schema:
            $ref: '#/definitions/UserRegisterBody'
      responses:
        '200':
          description: JSON response with the resolution of the request
          schema:
            $ref: '#/definitions/Ok'
        '400':
          description: JSON response with 400 Bad Request error
          schema:
            $ref: '#/definitions/BadRequest'
  /users/session:
    get:
      tags:
        - Users
      description: >-
        Returns information about the actual JWT/session (user authenticated or not authenticated)
      responses:
        '200':
          description: JSON response with the information of the actual session
          schema:
            $ref: '#/definitions/Ok'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
    post:
      tags:
        - Users
      description: >-
        Authenticate an user

        You can use [SHA512 Hash Generator](https://passwordsgenerator.net/sha512-hash-generator/) to hash the password
      parameters:
        - name: User authentication body
          in: body
          required: true
          description: >-
            JSON string containing the authentication parameters: e-mail string and password [hashed with SHA512](https://passwordsgenerator.net/sha512-hash-generator/)
          schema:
            $ref: '#/definitions/UserAuthenticationBody'
      responses:
        '200':
          description: JSON response with the resolution of the request
          schema:
            $ref: '#/definitions/UserAuthenticated'
        '400':
          description: JSON response with 400 Bad Request error
          schema:
            $ref: '#/definitions/BadRequest'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
  /evolutions:
    get:
      tags:
        - Evolutions
      summary: 👨🏻‍💻
      description: >-
        Returns information about evolutions or filter for not applied evolutions

        ### Permitted status values

        - not-applied
      security:
        - jwtAuth: []
      parameters:
        - name: status
          in: query
          required: false
          description: status filter
          type: string
      responses:
        '200':
          description: JSON response with the evolutions
          schema:
            $ref: '#/definitions/Evolutions'
        '400':
          description: JSON response with 400 Bad Request error
          schema:
            $ref: '#/definitions/BadRequest'
    patch:
      tags:
        - Evolutions
      summary: 👨🏻‍💻
      description: >-
        Apply a not applied evolution
      security:
        - jwtAuth: []
      parameters:
        - in: body
          name: evolutionId
          description: id of the evolution to apply
          schema:
            $ref: '#/definitions/EvolutionPatchBody'
      responses:
        '200':
          description: JSON response with TV Show updated info
          schema:
            $ref: '#/definitions/Ok'
        '400':
          description: JSON response with 400 Bad Request error
          schema:
            $ref: '#/definitions/BadRequest'
        '401':
          description: JSON response with 401 Unauthorized error
          schema:
            $ref: '#/definitions/Unauthorized'
        '404':
          description: JSON response with 404 Not Found error
          schema:
            $ref: '#/definitions/NotFound'
        '500':
          description: JSON response with 500 Internal Server error
          schema:
            $ref: '#/definitions/InternalServerError'
definitions:
  Ok:
    properties:
      ok:
        type: string
  EpisodeSeenOk:
    properties:
      ok:
        type: string
      episodeSeen:
        type: object
        properties:
          date: string
          description: viewing date
  BadRequest:
    properties:
      error:
        type: string
  Unauthorized:
    properties:
      error:
        type: string
      type:
        type: string
      message:
        type: string
  NotFound:
    properties:
      error:
        type: string
  InternalServerError:
    properties:
      error:
        type: string
  GatewayTimeoutError:
    properties:
      error:
        type: string
  TvShowRequestBody:
    properties:
      tvdbId:
        type: integer
  TvShowsArray:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
          description: TV Show id
        name:
          type: string
          description: name of the TV Show
        firstAired:
          type: string
          description: first aired date
        banner:
          type: string
          description: relative url of the banner image
        score:
          type: number
          description: average rating
        voteCount:
          type: integer
          description: number of ratings
  TvdbTvShowsArray:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
          description: TV Show id
        tvdbId:
          type: integer
          description: TVDB id
        name:
          type: string
          description: name of the TV Show
        firstAired:
          type: string
          description: first aired date
        banner:
          type: string
          description: relative url of the banner image
        local:
          type: boolean
          description: true if the tvShows is in our bbdd
        requested:
          type: boolean
          description: true if the tvShows is requested by users
  TvShow:
    type: object
    properties:
      id:
        type: integer
        description: TV Show id
      tvdbId:
        type: integer
        description: TV Show id on The TVDB API
      name:
        type: string
        description: name of the TV Show
      firstAired:
        type: string
        description: first aired date
      overview:
        type: string
        description: a summary of the TV Show
      banner:
        type: string
        description: relative url of the banner image
      poster:
        type: string
        description: relative url of the poster image
      fanart:
        type: string
        description: relative url of the fanart image
      network:
        type: string
        description: network where the TV Show airs
      runtime:
        type: integer
        description: average episode runtime
      genre:
        type: array
        items:
          type: string
        description: genres of the TV Show
      rating:
        type: string
        description: TV Parental Guideline
      status:
        type: string
        description: status of the TV Show (continuing or ended)
      score:
        type: number
        description: average rating
      voteCount:
        type: integer
        description: number of ratings
      tvShowVotes:
        type: array
        items:
          type: object
          properties:
            score:
              type: number
              description: score rating
      seasons:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              description: season id
            seasonNumber:
              type: integer
              description: season number
            poster:
              type: string
              description: relative url of the season poster image
            episodeCount:
              type: integer
              description: number of episodes
            seenCount:
              type: integer
              description: number of episodes seen by the user
            unseenCount:
              type: integer
              description: number of episodes not seen by the user
      following:
        type: boolean
        description: identified user follows or not the tv show
      episodeCount:
        type: integer
        description: number of episodes of the whole tv show
      seenCount:
        type: integer
        description: number of episodes of the whole tv show seen by the user
      unseenCount:
        type: integer
        description: number of episodes of the whole tv show not seen by the user
      popularity:
        type: integer
        description: popular number
      trend:
        type: number
        description: trend of the popularity
  TvShowCreated:
    type: object
    properties:
      ok:
        type: string
      banner:
        type: boolean
      poster:
        type: boolean
      fanart:
        type: boolean
      tvShow:
        type: object
        properties:
          id:
            type: integer
            description: TV Show id
          tvdbId:
            type: integer
            description: TV Show id on The TVDB API
          name:
            type: string
            description: name of the TV Show
          firstAired:
            type: string
            description: first aired date
          overview:
            type: string
            description: a summary of the TV Show
          banner:
            type: string
            description: relative url of the banner image
          poster:
            type: string
            description: relative url of the poster image
          fanart:
            type: string
            description: relative url of the fanart image
          network:
            type: string
            description: network where the TV Show airs
          runtime:
            type: integer
            description: average episode runtime
          genre:
            type: array
            items:
              type: string
            description: genres of the TV Show
          rating:
            type: string
            description: TV Parental Guideline
          status:
            type: string
            description: status of the TV Show (continuing or ended)
          score:
            type: number
            description: average rating
          voteCount:
            type: integer
            description: number of ratings
          tvShowVotes:
            type: array
            items:
              type: object
              properties:
                score:
                  type: number
                  description: score rating
          seasons:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  description: season id
                seasonNumber:
                  type: integer
                  description: season number
                poster:
                  type: string
                  description: relative url of the season poster image
  TvShowBody:
    type: object
    properties:
      name:
        type: string
        description: name of the TV Show
      firstAired:
        type: string
        description: first aired date
      overview:
        type: string
        description: a summary of the TV Show
      banner:
        type: string
        description: relative url of the banner image
      poster:
        type: string
        description: relative url of the poster image
      fanart:
        type: string
        description: relative url of the fanart image
      network:
        type: string
        description: network where the TV Show airs
      runtime:
        type: integer
        description: average episode runtime
      genre:
        type: array
        items:
          type: string
        description: genres of the TV Show
      status:
        type: string
        description: status of the TV Show (continuing or ended)
  TvShowUpdateBody:
    type: object
    properties:
      update:
        type: string
        description: data or images
  CompleteSeason:
    type: object
    properties:
      id:
        type: integer
        description: season id
      seasonNumber:
        type: integer
        description: season number
      firstAired:
        type: string
        description: season first aired date
      poster:
        type: string
        description: relative url of the season poster image
      name:
        type: string
        description: season name
      overview:
        type: string
        description: a summary of the season
      episodes:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              description: episode id
            episodeNumber:
              type: integer
              description: episode number
            firstAired:
              type: string
              description: episode first air date
            screenshot:
              type: string
              description: relative url of the episode screenshot
            name:
              type: string
              description: episode name
            overview:
              type: string
              description: a summary of the episode
            seen:
              type: string
              description: date of viewing
      following:
        type: boolean
        description: identified user follows or not the tv show
      episodeCount:
        type: integer
        description: number of episodes of the season
      seenCount:
        type: integer
        description: number of episodes of the season seen by the user
      unseenCount:
        type: integer
        description: number of episodes of the season not seen by the user
  ArraySimpleSeason:
    type: object
    properties:
      size:
        type: integer
        description: size of the array of seasons
      following:
        type: boolean
        description: identified user follows or not the tv show
      episodeCount:
        type: integer
        description: number of episodes of all seasons
      seenCount:
        type: integer
        description: number of episodes of all seasons seen by the user
      unseenCount:
        type: integer
        description: number of episodes of all seasons not seen by the user
      seasons:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              description: season id
            seasonNumber:
              type: integer
              description: season number
            poster:
              type: string
              description: relative url of the season poster image
            episodeCount:
              type: integer
              description: number of episodes
            seenCount:
              type: integer
              description: number of episodes of the season seen by the user
            unseenCount:
              type: integer
              description: number of episodes of the season not seen by the user
  CompleteEpisode:
    type: object
    properties:
      id:
        type: integer
        description: episode id
      episodeNumber:
        type: integer
        description: episode number
      firstAired:
        type: string
        description: episode first air date
      screenshot:
        type: string
        description: relative url of the episode screenshot
      name:
        type: string
        description: episode name
      overview:
        type: string
        description: a summary of the episode
      following:
        type: boolean
        description: identified user follows or not the tv show
      seen:
        type: string
        description: date of viewing
  ArrayEpisodes:
    type: object
    properties:
      following:
        type: boolean
        description: identified user follows or not the tv show
      seenCount:
        type: integer
        description: number of episodes of the season seen by the user
      unseenCount:
        type: integer
        description: number of episodes of the season not seen by the user
      size:
        type: integer
        description: size of the array of episodes
      episodes:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              description: episode id
            episodeNumber:
              type: integer
              description: episode number
            firstAired:
              type: string
              description: episode first air date
            screenshot:
              type: string
              description: relative url of the episode screenshot
            name:
              type: string
              description: episode name
            overview:
              type: string
              description: a summary of the episode
            seen:
              type: string
              description: date of viewing
  TvShowRating:
    type: object
    properties:
      ok:
        type: string
      tvShowVote:
        type: object
        properties:
          id:
            type: integer
          tvShowId:
            type: integer
          userId:
            type: integer
          score:
            type: number
  TvShowTvdb:
    type: object
    properties:
      tvdbId:
        type: integer
        description: TVDB id
      name:
        type: string
        description: name of the TV Show
      firstAired:
        type: string
        description: first aired date
      banner:
        type: string
        description: relative url of the banner image from TVDB
  PopularArray:
    type: object
    properties:
      size:
        type: integer
        description: size of the array
      tvShows:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              description: TV Show id
            name:
              type: string
              description: name of the TV Show
            firstAired:
              type: string
              description: first aired date
            banner:
              type: string
              description: relative url of the banner image
            score:
              type: number
              description: average rating
            voteCount:
              type: integer
              description: number of ratings
            poster:
              type: string
              description: relative url of the poster image
            popularity:
              type: integer
              description: popular number
            trend:
              type: number
              description: trend of the popularity
            following:
              type: boolean
              description: identified user follows or not the tv show
            episodeCount:
              type: integer
              description: number of episodes of the whole tv show
            seenCount:
              type: integer
              description: number of episodes of the whole tv show seen by the user
            unseenCount:
              type: integer
              description: number of episodes of the whole tv show not seen by the user
  TopRatedArray:
    type: object
    properties:
      size:
        type: integer
        description: size of the array
      tvShows:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              description: TV Show id
            name:
              type: string
              description: name of the TV Show
            firstAired:
              type: string
              description: first aired date
            banner:
              type: string
              description: relative url of the banner image
            score:
              type: number
              description: average rating
            voteCount:
              type: integer
              description: number of ratings
            poster:
              type: string
              description: relative url of the poster image
            top:
              type: integer
              description: position in the top rated TV Shows
            following:
              type: boolean
              description: identified user follows or not the tv show
            episodeCount:
              type: integer
              description: number of episodes of the whole tv show
            seenCount:
              type: integer
              description: number of episodes of the whole tv show seen by the user
            unseenCount:
              type: integer
              description: number of episodes of the whole tv show not seen by the user
  TopTwitterArray:
    type: object
    properties:
      size:
        type: integer
        description: size of the array
      tvShows:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              description: TV Show id
            name:
              type: string
              description: name of the TV Show
            firstAired:
              type: string
              description: first aired date
            banner:
              type: string
              description: relative url of the banner image
            score:
              type: number
              description: average rating
            voteCount:
              type: integer
              description: number of ratings
            poster:
              type: string
              description: relative url of the poster image
            top:
              type: integer
              description: position in the top twitter TV Shows
            ratio:
              type: number
              description: tweet/hour ratio in twitter
            following:
              type: boolean
              description: identified user follows or not the tv show
            episodeCount:
              type: integer
              description: number of episodes of the whole tv show
            seenCount:
              type: integer
              description: number of episodes of the whole tv show seen by the user
            unseenCount:
              type: integer
              description: number of episodes of the whole tv show not seen by the user
  UserAuthenticated:
    type: object
    properties:
      ok:
        type: string
        description: response
      type:
        type: string
        description: response status
      message:
        type: string
        description: response message
      Authorization:
        type: string
        description: JWT generated
      userId:
        type: integer
        description: user id
      userName:
        type: string
        description: user name
      userRol:
        type: string
        description: user rol
  Evolutions:
    type: object
    properties:
      evolutions:
        type: object
        properties:
          id:
            type: integer
            description: id of the evolution
          version:
            type: integer
            description: version of the evolution
          state:
            type: string
            description: state of the evolution like not-applied, applied, etc.
      actualVersion:
        type: string
        description: actual version of the database
      newVersion:
        type: string
        description: new version to be applied if exists
  EvolutionPatchBody:
    properties:
      evolutionId:
        type: integer
        description: id of the evolution to be applied
  RatingPutBody:
    properties:
      score:
        type: number
        description: new TV Show rating
  UserRegisterBody:
    properties:
      email:
        type: string
        description: new user's email
      password:
        type: string
        description: SHA512 hashed password
      name:
        type: string
        description: new user's name
  UserAuthenticationBody:
    properties:
      email:
        type: string
        description: user's email
      password:
        type: string
        description: SHA512 hashed password
  RequestPatchBody:
    properties:
      status:
        type: string
        description: new request status
securityDefinitions:
  jwtAuth:
    type: apiKey
    in: header
    name: Authorization
